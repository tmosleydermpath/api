{
    "swagger": "2.0",
    "info": {
        "description": "This is an API server to connect to the Cloud version of the Clearpath Suite\n\n",
        "version": "1.0.0",
        "title": "Clearpath Utility Suite",
        "termsOfService": "http://dermpathlab.com",
        "contact": {
            "name": "tmosley@dermpathlab.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "api.dlcscpth.com",
    "basePath": "/v1",
    "schemes": [
        "https"
    ],
    "paths": {
        "/cases": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "case"
                ],
                "summary": "Complete Case List",
                "description": "The cases endpoint returns information for\nall cases in the system.\n",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Allow sorting of results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Chose fields to return",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pretty",
                        "in": "query",
                        "description": "Toggle Pretty Print",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter based off configured filters",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation - An array of Cases",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Case"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "case"
                ],
                "summary": "Insert new case",
                "description": "Insert a new case",
                "operationId": "CaseInsert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Case object that needs to be created",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Case"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/codes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "code"
                ],
                "summary": "Diagnostic, Micro and Note Code List",
                "description": "The codes endpoint returns information for\nall codes in the system.\n",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Allow sorting of results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Chose fields to return",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pretty",
                        "in": "query",
                        "description": "Toggle Pretty Print",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter based off configured filters",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation - An array of Codes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Code"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/accounts": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Account List",
                "description": "The account endpoint returns information for\nall accounts in the system.\n",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Allow sorting of results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Chose fields to return",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pretty",
                        "in": "query",
                        "description": "Toggle Pretty Print",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter based off configured filters",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation - An array of Accounts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cases/{caseID}": {
            "get": {
                "tags": [
                    "case"
                ],
                "summary": "Find case by using case ID",
                "description": "Returns a case when caseID = 14 characters, all other characters will trigger error conditions",
                "operationId": "CaseShow",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "caseID",
                        "description": "ID of case that needs to be viewed",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Chose fields to return",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pretty",
                        "in": "query",
                        "description": "Toggle Pretty Print",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "schema": {
                            "$ref": "#/definitions/Case"
                        }
                    },
                    "404": {
                        "description": "Case not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "case"
                ],
                "summary": "Delete case by using case ID",
                "description": "Delete a case when case ID is provided",
                "operationId": "CaseDelete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "caseID",
                        "description": "ID of case that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Case not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "case"
                ],
                "summary": "Update existing case",
                "description": "Update existing case",
                "operationId": "CaseUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "caseID",
                        "description": "ID of case that needs to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Case object that needs to be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Case"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/cases/{caseID}/cassettes": {
            "get": {
                "tags": [
                    "cassette"
                ],
                "summary": "Find all cassettes using case ID",
                "description": "Returns an array of cassettes for the supplied case ID",
                "operationId": "CassetteIndex",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "caseID",
                        "description": "ID of the case that needs to be viewed",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Chose fields to return",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pretty",
                        "in": "query",
                        "description": "Toggle Pretty Print",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort return data by fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Cassette"
                            }
                        }
                    }
                }
            }
        },
        "/cases/{caseID}/slides": {
            "get": {
                "tags": [
                    "slide"
                ],
                "summary": "Find all slides using case ID",
                "description": "Returns an array of slides for the supplied case ID",
                "operationId": "SlideIndex",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "caseID",
                        "description": "ID of the case that needs to be viewed",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Chose fields to return",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pretty",
                        "in": "query",
                        "description": "Toggle Pretty Print",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort return data by fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Slide"
                            }
                        }
                    }
                }
            }
        },
        "/slides": {
            "post": {
                "tags": [
                    "slide"
                ],
                "summary": "Insert new slide",
                "description": "Insert a new slide",
                "operationId": "SlideInsert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Slide object that needs to be created",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Slide"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/slides/{slideQRCode}": {
            "get": {
                "tags": [
                    "slide"
                ],
                "summary": "Find slide by using QRCode",
                "description": "Returns a slide when QRCode is between 10 - 14 characters, all other characters will trigger error conditions",
                "operationId": "SlideShow",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "slideQRCode",
                        "description": "QRCode of the slide that needs to be viewed",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Chose fields to return",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pretty",
                        "in": "query",
                        "description": "Toggle Pretty Print",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "schema": {
                            "$ref": "#/definitions/Slide"
                        }
                    },
                    "404": {
                        "description": "Slide not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "slide"
                ],
                "summary": "Delete slide by using slide QR code",
                "description": "Delete a slide when QR code is provided",
                "operationId": "SlideDelete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "slideQRCode",
                        "description": "QRCode of slide that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Slide not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "slide"
                ],
                "summary": "Update existing slide",
                "description": "Update existing slide",
                "operationId": "SlideUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "slideQRCode",
                        "description": "QRCode of slide that needs to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Slide object that needs to be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Slide"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/cassettes": {
            "post": {
                "tags": [
                    "cassette"
                ],
                "summary": "Insert new cassette",
                "description": "Insert a new cassette",
                "operationId": "CassetteInsert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Cassette object that needs to be created",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Cassette"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/cassettes/{cassetteQRCode}": {
            "get": {
                "tags": [
                    "cassette"
                ],
                "summary": "Find cassette by using QRCode",
                "description": "Returns a cassette when QRCode is between 10 - 14 characters, all other characters will trigger error conditions",
                "operationId": "CassetteShow",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cassetteQRCode",
                        "description": "QRCode of the slide that needs to be viewed",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Chose fields to return",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pretty",
                        "in": "query",
                        "description": "Toggle Pretty Print",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "schema": {
                            "$ref": "#/definitions/Cassette"
                        }
                    },
                    "404": {
                        "description": "Cassette not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cassette"
                ],
                "summary": "Delete cassette by using cassette QR code",
                "description": "Delete a cassette when QR code is provided",
                "operationId": "CassetteDelete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cassetteQRCode",
                        "description": "QRCode of cassette that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Cassette not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "cassette"
                ],
                "summary": "Update existing cassette",
                "description": "Update existing cassette",
                "operationId": "CassetteUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cassetteQRCode",
                        "description": "QRCode of cassette that needs to be deleted",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Cassette object that needs to be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Cassette"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "DepartList": {
            "properties": {
                "Collection": {
                    "type": "boolean"
                },
                "Grossing": {
                    "type": "boolean"
                },
                "Tissue": {
                    "type": "boolean"
                },
                "Embedding": {
                    "type": "boolean"
                },
                "Cutting": {
                    "type": "boolean"
                },
                "Digitalimage": {
                    "type": "boolean"
                },
                "Diagnosis": {
                    "type": "boolean"
                },
                "Slideprep": {
                    "type": "boolean"
                },
                "Slidetrans": {
                    "type": "boolean"
                },
                "Transcription": {
                    "type": "boolean"
                }
            }
        },
        "Patient": {
            "properties": {
                "MRN": {
                    "type": "string"
                },
                "SSN": {
                    "type": "string"
                },
                "AccountNum": {
                    "type": "string"
                },
                "Birthdate": {
                    "type": "string"
                },
                "First": {
                    "type": "string"
                },
                "Last": {
                    "type": "string"
                },
                "Middle": {
                    "type": "string"
                },
                "Phone": {
                    "type": "string"
                },
                "Race": {
                    "type": "string"
                },
                "Sex": {
                    "type": "string"
                }
            }
        },
        "Gross": {
            "properties": {
                "Account": {
                    "type": "string"
                },
                "CutMethod": {
                    "type": "string"
                },
                "Date": {
                    "type": "integer",
                    "format": "int64"
                },
                "Descript": {
                    "type": "string"
                },
                "Dimension": {
                    "type": "string"
                },
                "Term": {
                    "type": "string"
                }
            }
        },
        "Collect": {
            "properties": {
                "Account": {
                    "type": "string"
                },
                "Date": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Specimens": {
            "properties": {
                "PAS": {
                    "type": "boolean"
                },
                "QRCode": {
                    "type": "string"
                },
                "SN": {
                    "type": "string"
                },
                "AdditStain": {
                    "type": "integer",
                    "format": "int32"
                },
                "AdditStainReq": {
                    "type": "string"
                },
                "AnatomicText": {
                    "type": "string"
                },
                "Cassette": {
                    "type": "integer",
                    "format": "int32"
                },
                "Collect": {
                    "$ref": "#/definitions/Collect"
                },
                "CompleDay": {
                    "type": "integer",
                    "format": "int64"
                },
                "DepartList": {
                    "$ref": "#/definitions/DepartList"
                },
                "DiffDiagText": {
                    "type": "string"
                },
                "Gross": {
                    "$ref": "#/definitions/Gross"
                },
                "GrossNote": {
                    "type": "string"
                },
                "Hold": {
                    "type": "boolean"
                },
                "Index": {
                    "type": "integer",
                    "format": "int32"
                },
                "Margin": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "PhistoryText": {
                    "type": "string"
                },
                "Processing": {
                    "type": "boolean"
                },
                "Recut": {
                    "type": "boolean"
                },
                "Scanned": {
                    "type": "integer",
                    "format": "int32"
                },
                "Slide": {
                    "type": "integer",
                    "format": "int32"
                },
                "SlideSum": {
                    "type": "integer",
                    "format": "int32"
                },
                "SourceCode": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "Stop": {
                    "type": "boolean"
                },
                "Type": {
                    "type": "string"
                }
            }
        },
        "Insurance": {
            "properties": {
                "Type": {
                    "type": "string"
                }
            }
        },
        "DisplayType": {
            "properties": {
                "S": {
                    "$ref": "#/definitions/S"
                }
            }
        },
        "S": {
            "properties": {
                "B": {
                    "type": "string"
                },
                "C": {
                    "type": "string"
                }
            }
        },
        "Case": {
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MOHS": {
                    "type": "boolean"
                },
                "NY": {
                    "type": "boolean"
                },
                "AccessioningCompleteTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "Account": {
                    "type": "string"
                },
                "AssignDate": {
                    "type": "string"
                },
                "AssignUser": {
                    "type": "string"
                },
                "Billing": {
                    "type": "string"
                },
                "BillingComplete": {
                    "type": "boolean"
                },
                "BillingPending": {
                    "type": "boolean"
                },
                "BiopsyDate": {
                    "type": "string"
                },
                "CaseID": {
                    "type": "string"
                },
                "CaseNote": {
                    "type": "string"
                },
                "CaseType": {
                    "type": "string"
                },
                "Clinic": {
                    "type": "string"
                },
                "ClinicAccount": {
                    "type": "string"
                },
                "ClinicName": {
                    "type": "string"
                },
                "CompleDay": {
                    "type": "integer",
                    "format": "int32"
                },
                "CompleDigi": {
                    "type": "integer",
                    "format": "int32"
                },
                "CreateFrom": {
                    "type": "string"
                },
                "Date": {
                    "type": "integer",
                    "format": "int32"
                },
                "DepartList": {
                    "$ref": "#/definitions/DepartList"
                },
                "DiagnoType": {
                    "type": "string"
                },
                "DisplayType": {
                    "$ref": "#/definitions/DisplayType"
                },
                "DiagnosisFirst": {
                    "type": "boolean"
                },
                "DupSlide": {
                    "type": "boolean"
                },
                "EndDEPT": {
                    "type": "string"
                },
                "ExecuteDate": {
                    "type": "integer",
                    "format": "int32"
                },
                "HaveRelate": {
                    "type": "boolean"
                },
                "OrderFirst": {
                    "type": "boolean"
                },
                "Patient": {
                    "$ref": "#/definitions/Patient"
                },
                "PhysicianLock": {
                    "type": "boolean"
                },
                "Problem": {
                    "type": "boolean"
                },
                "RecutProcess": {
                    "type": "boolean"
                },
                "RelateCases": {
                    "type": "string"
                },
                "Rush": {
                    "type": "boolean"
                },
                "RushReq": {
                    "type": "string"
                },
                "SlidePrepCompleDay": {
                    "type": "integer",
                    "format": "int32"
                },
                "Specimens": {
                    "$ref": "#/definitions/Specimens"
                },
                "Status": {
                    "type": "string"
                },
                "Insurance": {
                    "$ref": "#/definitions/Insurance"
                }
            }
        },
        "Error": {
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Cutting": {
            "properties": {
                "Account": {
                    "type": "string"
                },
                "Date": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Digital": {
            "properties": {
                "Account": {
                    "type": "string"
                },
                "Date": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DigitalID": {
            "properties": {
                "AppMag": {
                    "type": "string"
                },
                "Date": {
                    "type": "string"
                },
                "Desc": {
                    "type": "string"
                },
                "Height": {
                    "type": "string"
                },
                "SlideImageID": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Width": {
                    "type": "string"
                }
            }
        },
        "Slide": {
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "QRCode": {
                    "type": "string"
                },
                "SN": {
                    "type": "string"
                },
                "CaseID": {
                    "type": "string"
                },
                "Cassette": {
                    "type": "string"
                },
                "Cutting": {
                    "$ref": "#/definitions/Cutting"
                },
                "Digital": {
                    "$ref": "#/definitions/Digital"
                },
                "DigitalID": {
                    "$ref": "#/definitions/DigitalID"
                },
                "DupGroup": {
                    "type": "string"
                },
                "Duplicate": {
                    "type": "boolean"
                },
                "ReCut": {
                    "type": "boolean"
                },
                "RecutComm": {
                    "type": "string"
                }
            }
        },
        "Tissue": {
            "properties": {
                "Account": {
                    "type": "string"
                },
                "Date": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CasGross": {
            "properties": {
                "Account": {
                    "type": "string"
                },
                "Date": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Cassette": {
            "properties": {
                "QRCode": {
                    "type": "string"
                },
                "SN": {
                    "type": "string"
                },
                "CaseID": {
                    "type": "string"
                },
                "Gross": {
                    "$ref": "#/definitions/CasGross"
                },
                "Pieces": {
                    "type": "string"
                },
                "Specimen": {
                    "type": "string"
                },
                "Tissue": {
                    "$ref": "#/definitions/Tissue"
                }
            }
        },
        "Code": {
            "properties": {
                "Code": {
                    "type": "string"
                },
                "Desc": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "Text": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            }
        },
        "Diagnosis": {
            "properties": {
                "Desc": {
                    "type": "string"
                },
                "Diag": {
                    "type": "string"
                },
                "ID": {
                    "type": "string"
                },
                "Micro": {
                    "type": "string"
                }
            }
        },
        "Account": {
            "properties": {
                "DragonDetection": {
                    "type": "boolean"
                },
                "NPI": {
                    "type": "string"
                },
                "Account": {
                    "type": "string"
                },
                "Addr1": {
                    "type": "string"
                },
                "Addr2": {
                    "type": "string"
                },
                "Aetna": {
                    "type": "string"
                },
                "AssignLimit": {
                    "type": "integer",
                    "format": "int32"
                },
                "City": {
                    "type": "string"
                },
                "Code": {
                    "type": "string"
                },
                "Degree": {
                    "type": "string"
                },
                "Delay": {
                    "type": "string"
                },
                "DelayDate": {
                    "type": "integer",
                    "format": "int32"
                },
                "DiagnoType": {
                    "type": "string"
                },
                "Diagnosis": {
                    "$ref": "#/definitions/Diagnosis"
                },
                "DigitalLimit": {
                    "type": "integer",
                    "format": "int32"
                },
                "Email": {
                    "type": "string"
                },
                "Enable": {
                    "type": "boolean"
                },
                "First": {
                    "type": "string"
                },
                "FirstAcc": {
                    "type": "integer",
                    "format": "int32"
                },
                "GetComplete": {
                    "type": "integer",
                    "format": "int32"
                },
                "GlassLimit": {
                    "type": "integer",
                    "format": "int32"
                },
                "Last": {
                    "type": "string"
                },
                "LastAcc": {
                    "type": "integer",
                    "format": "int32"
                },
                "LastAssign": {
                    "type": "integer",
                    "format": "int32"
                },
                "Lock": {
                    "type": "boolean"
                },
                "LoginCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "MediaCare": {
                    "type": "boolean"
                },
                "Middle": {
                    "type": "string"
                },
                "Mobile": {
                    "type": "string"
                },
                "Olsen": {
                    "type": "boolean"
                },
                "Password": {
                    "type": "string"
                },
                "Phone": {
                    "type": "string"
                },
                "Pic": {
                    "type": "string"
                },
                "PracticeName": {
                    "type": "string"
                },
                "RePwDate": {
                    "type": "integer",
                    "format": "int32"
                },
                "ResetPW": {
                    "type": "integer",
                    "format": "int32"
                },
                "State": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "UserCode": {
                    "type": "string"
                },
                "Website": {
                    "type": "string"
                },
                "Zip": {
                    "type": "string"
                }
            }
        }
    }
<<<<<<< HEAD
}
=======
}
>>>>>>> a1e0e468b830fd9f6f6a7d69a13e9b162a07ce21
